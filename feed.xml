<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>tzemanovic.github.io blog</title>
    <link href="https://tzemanovic.github.io/feed.xml" rel="self" />
    <link href="https://tzemanovic.github.io" />
    <id>https://tzemanovic.github.io/feed.xml</id>
    <author>
        <name>Tomas Zemanovic</name>
        <email>tzemanovic@gmail.com</email>
    </author>
    <updated>2014-05-10T00:00:00Z</updated>
    <entry>
    <title>custom domain site hosted on github</title>
    <link href="https://tzemanovic.github.io/posts/custom-domain-site-hosted-on-github/index.html" />
    <id>https://tzemanovic.github.io/posts/custom-domain-site-hosted-on-github/index.html</id>
    <published>2014-05-10T00:00:00Z</published>
    <updated>2014-05-10T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>This website is hosted on <a href="https://github.com/maseek/maseek-codes" target="_blank">github</a>. It’s free, fast and reliable. You can only host static websites on github, but that’s not an issue if you use static site generator like <a href="http://jekyllrb.com/" target="_blank">Jekyll</a>, or if you, like me, prefer using Haskell, there’s Jekyll’s good twin <a href="http://jaspervdj.be/hakyll/" target="_blank">Hakyll</a>.</p>
<p>To redirect your custom domain to the github page, you need to lookup the DNS for A Record IP, using either <code>dig</code> command or <a href="http://www.dnsqueries.com/en/dns_lookup.php" target="_blank">online DNS lookup tool</a>. Then use the IP address you found to create A Record for your domain. Consult the <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages" target="_blank">github documentation</a> if you need more details.</p>
<p>To redirect the github page to your custom domain create a <strong>CNAME</strong> file in the github pages repo and put your domain name in it (e.g. <a href="http://maseek.codes">maseek.codes</a>)</p>
<p>It is handy to create a <em>one-click</em> publish shell script. Here is mine:</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="co">#!/bin/bash</span>

<span class="co"># Create _publish directory if it doesn&#39;t exits</span>
<span class="fu">mkdir</span> -p _publish
<span class="bu">cd</span> _publish

<span class="co"># Clone the giuthub page repo or pull the latest version</span>
<span class="kw">if</span><span class="bu"> [</span> <span class="ot">!</span> <span class="ot">-d</span> <span class="st">&quot;maseek.github.io&quot;</span><span class="bu"> ]</span>; <span class="kw">then</span>
    <span class="fu">git</span> clone https://github.com/maseek/maseek.github.io.git
<span class="kw">else</span>
    <span class="fu">git</span> pull origin master
<span class="kw">fi</span>

<span class="bu">cd</span> maseek.github.io

<span class="co"># Prepend the file names you want to keep in here with dot</span>
<span class="fu">mv</span> CNAME .CNAME
<span class="fu">mv</span> README.md .README.md

<span class="co"># Clean up</span>
<span class="fu">rm</span> -rf *

<span class="co"># Undo the name changes</span>
<span class="fu">mv</span> .CNAME CNAME
<span class="fu">mv</span> .README.md README.md

<span class="co"># Hakyll by default generates site into _site directory</span>
<span class="fu">cp</span> -rf ../../_site/* .

<span class="co"># Add all files to git</span>
<span class="fu">git</span> add --all :/
<span class="fu">git</span> add -u :/

<span class="bu">echo</span> -n <span class="st">&quot;enter commit message: &quot;</span>
<span class="bu">read</span> <span class="va">msg</span>
<span class="fu">git</span> commit -m <span class="st">&quot;</span><span class="va">$msg</span><span class="st">&quot;</span>

<span class="co"># If you are using cygwin, git push command will get stuck, so use the following command first to cofigure git to ask for password in a popup window</span>
<span class="co"># git config --global core.askpass &quot;git-gui--askpass&quot;</span>

<span class="fu">git</span> push origin master</code></pre></div>]]></summary>
</entry>
<entry>
    <title>Linux Mint in Windows 8 via VMware Player</title>
    <link href="https://tzemanovic.github.io/posts/linux-mint-in-windows-8-via-vmware-player/index.html" />
    <id>https://tzemanovic.github.io/posts/linux-mint-in-windows-8-via-vmware-player/index.html</id>
    <published>2014-03-29T00:00:00Z</published>
    <updated>2014-03-29T00:00:00Z</updated>
    <summary type="html"><![CDATA[<p>For a while I have been trying to emulate the *nix terminal in Windows 8 using cygwin, but I wanted to get the full experience, so I decided to run Linux Mint in VMware Player. The setup instructions follow.</p>
<p>First of all you need to disable Hyper-V to be able to install VMware Player. To do that run the following command from an elevated command prompt:</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">dism.exe</span> /Online /Disable-Feature:Microsoft-Hyper-V</code></pre></div>
<p>In case you need to enable Hyper-V again, the following undoes the changes:</p>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">dism.exe</span> /Online /Enable-Feature:Microsoft-Hyper-V /All</code></pre></div>
<p>Next, install and run <a href="https://my.vmware.com/web/vmware/free" target="_blank">VMware Player</a>.</p>
<ol style="list-style-type: decimal">
<li><p>Create a new virtual machine:</p>
<p><img src="step-1.jpg" alt="step 1"/></p></li>
<li><p>Select location of the Linux image, I went for <a href="http://www.linuxmint.com/download.php" target="_blank">Linux Mint 16 Cinnamon 64-bit</a>:</p>
<p><img src="step-2.jpg" alt="step 2"/></p></li>
<li><p>The version is Linux 3.x kernel 64-bit:</p>
<p><img src="step-3.jpg" alt="step 3"/></p></li>
<li><p>Select where you want to store the virtual machine:</p>
<p><img src="step-4.jpg" alt="step 4"/></p></li>
<li><p>Give it appropriate disk capacity, I gave mine only 8GB at fist, but ran out of it quite quickly (if you resize the capacity later on you will most-likely have to do some disk partitioning):</p>
<p><img src="step-5.jpg" alt="step 5"/></p></li>
<li><p>Before you finish you will want to customize hardware:</p>
<p><img src="step-6.jpg" alt="step 6"/></p></li>
<li><p>Select how much memory you want to use for your VM:</p>
<p><img src="step-7.jpg" alt="step 7"/></p></li>
<li><p>Enable 3D graphics acceleration from the Display settings:</p>
<p><img src="step-8.jpg" alt="step 8"/></p>
<p>And that’s you ready to roll in Linux.</p></li>
</ol>
<p>My screen resolution (1920x1080) was not listed in the display settings, here’s how I fixed it.</p>
<ol style="list-style-type: decimal">
<li>Calculate VESA CVT mode lines:</li>
</ol>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">cvt</span> 1920 1080</code></pre></div>
<ol style="list-style-type: decimal">
<li>Copy the output starting from after Modeline, and prepend it with <code>xrandr –newmode</code>, e.g.:</li>
</ol>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">xrandr</span> --newmode <span class="st">&quot;1920x1080_60.00&quot;</span> 173.00 1920 2048 2248 2576 1080 1083 1088 1120 -hsync +vsync</code></pre></div>
<ol style="list-style-type: decimal">
<li>and then:</li>
</ol>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="ex">xrandr</span> --addmode Virtual1 <span class="st">&quot;1920x1080_60.00&quot;</span></code></pre></div>
<ol style="list-style-type: decimal">
<li><p>Switch to console mode using <kbd>Alt</kbd>+<kbd>Ctrl</kbd>+<kbd>F1</kbd> and log in.</p></li>
<li><p>Stop Display Manager:</p></li>
</ol>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">sudo</span> service mdm stop</code></pre></div>
<ol style="list-style-type: decimal">
<li>create X configuration file:</li>
</ol>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">sudo</span> X -configure</code></pre></div>
<ol style="list-style-type: decimal">
<li>and start it again:</li>
</ol>
<div class="sourceCode"><pre class="sourceCode bash"><code class="sourceCode bash"><span class="fu">sudo</span> service mdm start</code></pre></div>
<ol style="list-style-type: decimal">
<li>Switch to back to the desktop mode using <kbd>Alt</kbd>+<kbd>Ctrl</kbd>+<kbd>F7</kbd>.</li>
</ol>]]></summary>
</entry>

</feed>
